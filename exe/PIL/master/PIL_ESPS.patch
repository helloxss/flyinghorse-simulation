diff --git a/exe/PIL/master/RUN_golden/golden.cpp b/exe/PIL/master/RUN_golden/golden.cpp
index d9683a8..2ddef4c 100755
--- a/exe/PIL/master/RUN_golden/golden.cpp
+++ b/exe/PIL/master/RUN_golden/golden.cpp
@@ -19,12 +19,12 @@ extern "C" void master_startup() {
         throw std::invalid_argument("Must set $WORKSPACE");
     }
 
-    new_slave->sim_path = std::string(std::getenv("WORKSPACE")) + "/exe/PIL/slave";
-    new_slave->S_main_name = "./S_main_Linux_5.4_x86_64.exe";
-    new_slave->run_input_file = "RUN_golden/golden.py";
-    new_slave->sync_error_terminate = 1;
-    trick_master_slave.master.add_slave(new_slave);
-    trick_master_slave.master.enable();
+    // new_slave->sim_path = std::string(std::getenv("WORKSPACE")) + "/exe/PIL/slave";
+    // new_slave->S_main_name = "./S_main_Linux_5.4_x86_64.exe";
+    // new_slave->run_input_file = "RUN_golden/golden.py";
+    // new_slave->sync_error_terminate = 1;
+    // trick_master_slave.master.add_slave(new_slave);
+    // trick_master_slave.master.enable();
 }
 
 extern "C" int event_start() {
diff --git a/exe/PIL/master/S_define b/exe/PIL/master/S_define
index 614d5df..c5d730f 100755
--- a/exe/PIL/master/S_define
+++ b/exe/PIL/master/S_define
@@ -195,7 +195,7 @@ class Rocket_SimObject : public Trick::SimObject {
                 gps_con     (  ),
                 dynamics    (  )
             {
-            ("initialization") transceiver.initialize_connection("ENVIRONMENT");
+            //  ("initialization") transceiver.initialize_connection("ENVIRONMENT");
             ("initialization") link();
             ("initialization") aerodynamics.initialize();
             ("initialization") dynamics.initialize();
diff --git a/exe/PIL/slave/RUN_golden/golden.py b/exe/PIL/slave/RUN_golden/golden.py
index dd15889..cde8daa 100755
--- a/exe/PIL/slave/RUN_golden/golden.py
+++ b/exe/PIL/slave/RUN_golden/golden.py
@@ -1,9 +1,9 @@
 # execfile("Modified_data/test.dr")
 execfile("Modified_data/gps.dr")
 ##########################################################
-new_connection = trick.MSSocket()
-trick_master_slave.slave.set_connection_type(new_connection)
-trick_master_slave.slave.sync_error_terminate = 1
+# new_connection = trick.MSSocket()
+# trick_master_slave.slave.set_connection_type(new_connection)
+# trick_master_slave.slave.sync_error_terminate = 1
 
 ######################set ins start time################################
 Year = 2017
diff --git a/exe/PIL/slave/S_define b/exe/PIL/slave/S_define
index 6c11a9c..064da9c 100755
--- a/exe/PIL/slave/S_define
+++ b/exe/PIL/slave/S_define
@@ -133,7 +133,7 @@ class FlightComputer_SimObject : public Trick::SimObject {
         {
 
             ("default_data") clear_flag();
-            ("initialization") transceiver.initialize_connection("FLIGHT_COMPUTER");
+            //  ("initialization") transceiver.initialize_connection("FLIGHT_COMPUTER");
             ("initialization") icf_ctrlblk_init(&icf_esps_ctrl, ICF_SYSTEM_TYPE_ESPS);
             ("initialization") link();
             ("initialization") gps.initialize(0.05);
diff --git a/models/icf/src/icf_trx_ctrl.c b/models/icf/src/icf_trx_ctrl.c
index 05a91a7..0ee5a14 100644
--- a/models/icf/src/icf_trx_ctrl.c
+++ b/models/icf/src/icf_trx_ctrl.c
@@ -21,7 +21,7 @@ static struct icf_ctrl_port g_egse_port[] = {
     {0,        HW_PORT5, "/dev/ttyAP4", EMPTY_NETPORT,    RS422_DEVICE_TYPE,     NULL, NULL},
     {0,        HW_PORT6, "/dev/ttyAP5", EMPTY_NETPORT,    RS422_DEVICE_TYPE,     NULL, NULL},
     {HIL_INTF, HW_PORT7, "/dev/ttyAP6", EMPTY_NETPORT,    RS422_DEVICE_TYPE,     NULL, NULL},
-    {1,        HW_PORT8, "127.0.0.1",   8700,             ETHERNET_DEVICE_TYPE,  NULL, NULL}
+    {1,        HW_PORT8, "192.168.0.9",   8700,             ETHERNET_DEVICE_TYPE,  NULL, NULL}
 };
 
 static struct icf_ctrl_queue g_egse_queue[] = {
