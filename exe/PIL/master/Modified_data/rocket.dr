global DR_GROUP_ID
global drg
try:
    if DR_GROUP_ID >= 0:
        DR_GROUP_ID += 1
except NameError:
    DR_GROUP_ID = 0
    drg = []

drg.append(trick.DRBinary("rocket"))
drg[DR_GROUP_ID].set_freq(trick.DR_Always)
drg[DR_GROUP_ID].set_cycle(0.01)
drg[DR_GROUP_ID].set_single_prec_only(False)
drg[DR_GROUP_ID].add_variable("rkt.newton.dvbe")
drg[DR_GROUP_ID].add_variable("rkt.newton.alt")
drg[DR_GROUP_ID].add_variable("rkt.newton.thtvdx")
drg[DR_GROUP_ID].add_variable("rkt.newton.dvbi")
drg[DR_GROUP_ID].add_variable("rkt.newton.IPos[0]")
drg[DR_GROUP_ID].add_variable("rkt.newton.IPos[1]")
drg[DR_GROUP_ID].add_variable("rkt.newton.IPos[2]")
drg[DR_GROUP_ID].add_variable("rkt.newton.IVel[0]")
drg[DR_GROUP_ID].add_variable("rkt.newton.IVel[1]")
drg[DR_GROUP_ID].add_variable("rkt.newton.IVel[2]")
drg[DR_GROUP_ID].add_variable("rkt.newton.IAccl[0]")
drg[DR_GROUP_ID].add_variable("rkt.newton.IAccl[1]")
drg[DR_GROUP_ID].add_variable("rkt.newton.IAccl[2]")
drg[DR_GROUP_ID].add_variable("rkt.newton.fspb[0]")
drg[DR_GROUP_ID].add_variable("rkt.newton.fspb[1]")
drg[DR_GROUP_ID].add_variable("rkt.newton.fspb[2]")
drg[DR_GROUP_ID].add_variable("rkt.kinematics.alphax")
drg[DR_GROUP_ID].add_variable("rkt.force.fapb[0]")
drg[DR_GROUP_ID].add_variable("rkt.force.fapb[1]")
drg[DR_GROUP_ID].add_variable("rkt.force.fapb[2]")
drg[DR_GROUP_ID].add_variable("rkt.propulsion.vmass")
drg[DR_GROUP_ID].add_variable("rkt.propulsion.thrust")
drg[DR_GROUP_ID].add_variable("rkt.aerodynamics.environment[0].pdynmc")
drg[DR_GROUP_ID].add_variable("rkt.aerodynamics.environment[0].rho")
drg[DR_GROUP_ID].add_variable("rkt.newton.ref_alt")
drg[DR_GROUP_ID].add_variable("rkt.newton.hp")
drg[DR_GROUP_ID].add_variable("rkt.newton.ha")
drg[DR_GROUP_ID].add_variable("rkt.newton.inclination")
drg[DR_GROUP_ID].add_variable("rkt.propulsion.fmassr")
drg[DR_GROUP_ID].add_variable("rkt.propulsion.thrust_delta_v")
trick.add_data_record_group(drg[DR_GROUP_ID], trick.DR_Buffer)
drg[DR_GROUP_ID].enable()
