global DR_GROUP_ID
global drg
try:
    if DR_GROUP_ID >= 0:
        DR_GROUP_ID += 1
except NameError:
    DR_GROUP_ID = 0
    drg = []

drg.append(trick.DRAscii("gps"))
drg[DR_GROUP_ID].set_freq(trick.DR_Always)
drg[DR_GROUP_ID].set_cycle(0.1)
drg[DR_GROUP_ID].set_single_prec_only(False)
drg[DR_GROUP_ID].add_variable("rkt.gps_con.gdop")
drg[DR_GROUP_ID].add_variable("rkt.gps_con.gdop")
drg[DR_GROUP_ID].add_variable("rkt.gps_con.nsat")
drg[DR_GROUP_ID].add_variable("rkt.ins.altc")
drg[DR_GROUP_ID].add_variable("rkt.newton.alt")
drg[DR_GROUP_ID].add_variable("rkt.gps.state_pos")
drg[DR_GROUP_ID].add_variable("rkt.gps.state_vel")
drg[DR_GROUP_ID].add_variable("rkt.gps.state_pos")
drg[DR_GROUP_ID].add_variable("rkt.gps._SXH[0]")
drg[DR_GROUP_ID].add_variable("rkt.gps._SXH[1]")
drg[DR_GROUP_ID].add_variable("rkt.gps._SXH[2]")
drg[DR_GROUP_ID].add_variable("rkt.ins.ins_pos_err")
drg[DR_GROUP_ID].add_variable("rkt.gps.state_pos")
drg[DR_GROUP_ID].add_variable("rkt.ins.ins_vel_err")
drg[DR_GROUP_ID].add_variable("rkt.gps.state_pos")
drg[DR_GROUP_ID].add_variable("rkt.ins.ins_pose_err")
drg[DR_GROUP_ID].add_variable("rkt.ins.ins_vele_err")
trick.add_data_record_group(drg[DR_GROUP_ID], trick.DR_Buffer)
drg[DR_GROUP_ID].enable()
