global DR_GROUP_ID
global drg
try:
    if DR_GROUP_ID >= 0:
        DR_GROUP_ID += 1
except NameError:
    DR_GROUP_ID = 0
    drg = []

drg.append(trick.DRAscii("rocket_csv"))
drg[DR_GROUP_ID].set_freq(trick.DR_Always)
drg[DR_GROUP_ID].set_cycle(0.1)
drg[DR_GROUP_ID].set_single_prec_only(False)
drg[DR_GROUP_ID].add_variable("rkt.newton.lonx")
drg[DR_GROUP_ID].add_variable("rkt.newton.latx")
drg[DR_GROUP_ID].add_variable("rkt.newton.alt")
drg[DR_GROUP_ID].add_variable("rkt.newton.psivdx")
drg[DR_GROUP_ID].add_variable("rkt.newton.thtvdx")
drg[DR_GROUP_ID].add_variable("rkt.newton.dvbi")
drg[DR_GROUP_ID].add_variable("rkt.newton.IPos[0]")
drg[DR_GROUP_ID].add_variable("rkt.newton.IPos[1]")
drg[DR_GROUP_ID].add_variable("rkt.newton.IPos[2]")
drg[DR_GROUP_ID].add_variable("rkt.newton.IVel[0]")
drg[DR_GROUP_ID].add_variable("rkt.newton.IVel[1]")
drg[DR_GROUP_ID].add_variable("rkt.newton.IVel[2]")
drg[DR_GROUP_ID].add_variable("rkt.kinematics.alphax")
drg[DR_GROUP_ID].add_variable("rkt.kinematics.betax")
drg[DR_GROUP_ID].add_variable("rkt.env.rho")
drg[DR_GROUP_ID].add_variable("rkt.env.vmach")
drg[DR_GROUP_ID].add_variable("rkt.env.pdynmc")
drg[DR_GROUP_ID].add_variable("rkt.propulsion.vmass")
drg[DR_GROUP_ID].add_variable("rkt.propulsion.fmassr")
drg[DR_GROUP_ID].add_variable("rkt.propulsion.thrust")
trick.add_data_record_group(drg[DR_GROUP_ID], trick.DR_Buffer)
drg[DR_GROUP_ID].enable()
