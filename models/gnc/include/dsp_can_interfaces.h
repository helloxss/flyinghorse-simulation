#ifndef __DSP_CAN_INTERFACES_H__
#define __DSP_CAN_INTERFACES_H__
/********************************* TRICK HEADER *******************************
PURPOSE:
      (Describe the DSP CAN Command format, 
      the original document is from Hapith1 DSP CAN Interface Ver0.3_20171204.xlsx)
LIBRARY DEPENDENCY:
(

)
*******************************************************************************/

typedef  enum _ENUM_CAN_TARGET_ID {
        /* III CAN command */
        FC_to_PCU_III = 0x141,
        FC_to_TVC_III_NO1 = 0x142,
        FC_to_TVC_III_NO2 = 0x143,
        FC_to_PFS_III = 0x144,
        FC_to_RCS_III = 0x145,
        FC_to_ORDNANCE_FAIRING_III = 0x146,
        /* II CAN command */
        FC_to_PCU_II = 0x121,
        FC_to_TVC_II_NO1 = 0x122,
        FC_to_TVC_II_NO2 = 0x123,
        FC_to_PFS_II = 0x124,
        FC_to_ORDNANCE_SEPARATION_II = 0x125,
        /* III CAN status report */
        PCU_III_to_FC = 0x411,
        TVC_III_NO1_to_FC = 0x412,
        TVC_III_NO2_to_FC = 0x413,
        PFS_III_NO1_to_FC = 0x414,
        RCS_III_NO1_to_FC = 0x415,
        ORDNANCE_FAIRING_III_to_FC = 0x416,
        /* II CAN status report */
        PCU_II_to_FC = 0x211,
        TVC_II_NO1_to_FC = 0x212,
        TVC_II_NO2_to_FC = 0x213,
        PFS_II_NO1_to_FC = 0x214,
        ORDNANCE_SEPARATION_II_to_FC = 0x215,
        FC_to_EGSE_MISSION_EVENT_FAKE = 0x555
}ENUM_CAN_TARGET_ID;

typedef  enum _ENUM_TVC_TASK_COMMAND {
    TVC_REPORT_STATUS = 0x0,
    TVC_BUILD_IN_TEST = 0x1,
    TVC_START = 0x2,
    TVC_STOP = 0x03,
    TVC_MOVEMENT_FAKE = 0x0E,
    TVC_MOVEMENT_REAL = 0x0F
}ENUM_TVC_TASK_COMMAND;

typedef  enum _ENUM_PFS_TASK_COMMAND {
    PFS_REPORT_STATUS = 0x0,
    PFS_BUILD_IN_TEST = 0x1,
    PFS_FILLING = 0x2,
    PFS_FLY_MODE = 0x3,
    PFS_24V_PWR = 0x4,
    PFS_BALL_VALVES_ONOFF_FAKE = 0x0E,
    PFS_BALL_VALVES_ONOFF_REAL = 0x0F
}ENUM_PFS_TASK_COMMAND;

typedef  enum _ENUM_RCS_CTRL_TASK_COMMAND {
    RCS_REPORT_STATUS = 0x0,
    RCS_BUILD_IN_TEST = 0x1,
    RCS_START = 0x2,
    RCS_STOP = 0x3,
    RCS_BALL_VALVES_ONOFF_FAKE = 0x0E,
    RCS_BALL_VALVES_ONOFF_REAL = 0x0F
}ENUM_RCS_CTRL_TASK_COMMAND;

typedef  enum _ENUM_ORDNANCE_FAIRING_TASK_COMMAND {
    ORDNANCE_FAIRING_REPORT_STATUS = 0x0,
    ORDNANCE_FAIRING_BUILD_IN_TEST = 0x1,
    ORDNANCE_FAIRING_NOSECONE_CTRL_READY_OPEN_FAIRING = 0x2,
    ORDNANCE_FAIRING_NOSECONE_CTRL_DISABLE_FAIRING_FUNC = 0x3,
    ORDNANCE_FAIRING_NOSECONE_CTRL_OPEN_FAIRING_FAKE = 0x0E,
    ORDNANCE_FAIRING_NOSECONE_CTRL_OPEN_FAIRING_REAL = 0x0F,
    ORDNANCE_FAIRING_PAYLOAD_CTRL_READY_DEPLOY_PAYLOAD = 0x04,
    ORDNANCE_FAIRING_PAYLOAD_CTRL_DISABLE_DEPLOY_FUNC = 0x05,
    ORDNANCE_FAIRING_PAYLOAD_CTRL_DEPLOY_PAYLOAD = 0x1F,
    ORDNANCE_FAIRING_PAYLOAD_CTRL_DEPLOY_CUBESAT_NO1 = 0x2F,
    ORDNANCE_FAIRING_PAYLOAD_CTRL_DEPLOY_CUBESAT_NO2 = 0x3F,
    ORDNANCE_FAIRING_PAYLOAD_CTRL_DEPLOY_CUBESAT_NO3 = 0x4F,
    ORDNANCE_FAIRING_PAYLOAD_CTRL_DEPLOY_CUBESAT_NO4 = 0x5F
}ENUM_ORDNANCE_FAIRING_TASK_COMMAND;

typedef  enum _ENUM_ORDNANCE_SEPARATION_TASK_COMMAND {
    ORDNANCE_SEPARATION_REPORT_STATUS = 0x0,
    ORDNANCE_SEPARATION_BUILD_IN_TEST = 0x1,
    ORDNANCE_SEPARATION_CTRL_READY_TO_SEPARATE = 0x2,
    ORDNANCE_SEPARATION_CTRL_SEPARATE_II_and_III = 0x0F
}ENUM_ORDNANCE_SEPARATION_TASK_COMMAND;

#endif  //  __DSP_CAN_INTERFACES_H__
