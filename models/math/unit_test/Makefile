# A sample Makefile for building Google Test and using it in user
# tests.  Please tweak it to suit your environment and project.  You
# may want to move it to your project's root directory.
#
# SYNOPSIS:
#
#   make [all]  - makes everything.
#   make TARGET - makes the given target.
#   make clean  - removes all files generated by make.

# Please tweak the following variable definitions as needed by your
# project, except GTEST_HEADERS, which you can use in your own targets
# but shouldn't modify.

# Points to the root of Google Test, relative to where this file is.
# Remember to tweak this if you move this file.
# GTEST_DIR = ../googletest/googletest

# # Where to find user code.
# MODELS_DIR = ../../

# # Flags passed to the preprocessor.
# # Set Google Test's header directory as a system directory, such that
# # the compiler doesn't generate warnings in Google Test headers.
# CPPFLAGS += -isystem $(GTEST_DIR)/include -std=c++11

# # Flags passed to the C++ compiler.
# CXXFLAGS += -g -Wall -Wextra -pthread -I$(MODELS_DIR) -I ./

# # All tests produced by this Makefile.  Remember to add new tests you
# # created to the list.
# TESTS = timeTest mathTest stochasticTest

# # All Google Test headers.  Usually you shouldn't change this
# # definition.
# GTEST_HEADERS = $(GTEST_DIR)/include/gtest/*.h \
#                 $(GTEST_DIR)/include/gtest/internal/*.h

# # House-keeping build targets.

# all : $(TESTS)

# clean :
# 	rm -f $(TESTS) gtest.a gtest_main.a *.o

# # Builds gtest.a and gtest_main.a.

# # Usually you shouldn't tweak such internal variables, indicated by a
# # trailing _.
# GTEST_SRCS_ = $(GTEST_DIR)/src/*.cc $(GTEST_DIR)/src/*.h $(GTEST_HEADERS)

# # For simplicity and to avoid depending on Google Test's
# # implementation details, the dependencies specified below are
# # conservative and not optimized.  This is fine as Google Test
# # compiles fast and for ordinary users its source rarely changes.
# gtest-all.o : $(GTEST_SRCS_)
# 	$(CXX) $(CPPFLAGS) -I$(GTEST_DIR) $(CXXFLAGS) -c \
#             $(GTEST_DIR)/src/gtest-all.cc

# gtest_main.o : $(GTEST_SRCS_)
# 	$(CXX) $(CPPFLAGS) -I$(GTEST_DIR) $(CXXFLAGS) -c \
#             $(GTEST_DIR)/src/gtest_main.cc

# gtest.a : gtest-all.o
# 	$(AR) $(ARFLAGS) $@ $^

# gtest_main.a : gtest-all.o gtest_main.o
# 	$(AR) $(ARFLAGS) $@ $^

# #timeTest=====================================================================

# time_utility.o : $(MODELS_DIR)/math/include/time_utility.hh $(MODELS_DIR)/math/src/time_utility.cpp
# 		$(CXX) $(CPPFLAGS) $(CXXFLAGS) -I $(MODELS_DIR)/math/include/ \
# 		-c $(MODELS_DIR)/math/src/time_utility.cpp

# timeTest.o : ./timeTest.cc
# 	$(CXX) $(CPPFLAGS) $(CXXFLAGS) -c ./timeTest.cc

# timeTest : timeTest.o time_utility.o gtest_main.a
# 	$(CXX) $(CPPFLAGS) $(CXXFLAGS) -lpthread $^ -o $@

# #mathTest=====================================================================

# math_utility.o : $(MODELS_DIR)/math/include/math_utility.hh $(MODELS_DIR)/math/src/math_utility.cpp
# 		$(CXX) $(CPPFLAGS) $(CXXFLAGS) -I $(MODELS_DIR)/math/include/ \
# 		-c $(MODELS_DIR)/math/src/math_utility.cpp

# mathTest.o : ./mathTest.cc
# 	$(CXX) $(CPPFLAGS) $(CXXFLAGS) -c ./mathTest.cc

# mathTest : mathTest.o math_utility.o gtest_main.a
# 	$(CXX) $(CPPFLAGS) $(CXXFLAGS) -lpthread $^ -o $@

# #stochasticTest=====================================================================

# stochastic.o : $(MODELS_DIR)/math/include/stochastic.hh $(MODELS_DIR)/math/src/stochastic.cpp
# 		$(CXX) $(CPPFLAGS) $(CXXFLAGS) -I $(MODELS_DIR)/math/include/ \
# 		-c $(MODELS_DIR)/math/src/stochastic.cpp

# stochasticTest.o : ./stochasticTest.cc
# 	$(CXX) $(CPPFLAGS) $(CXXFLAGS) -c ./stochasticTest.cc

# stochasticTest : stochasticTest.o stochastic.o gtest_main.a
# 	$(CXX) $(CPPFLAGS) $(CXXFLAGS) -lpthread $^ -o $@


MKFILE_PATH := $(abspath $(lastword $(MAKEFILE_LIST)))
MATH_DIR := $(patsubst %/unit_test/Makefile, %, $(MKFILE_PATH))
SIRIUS_HOME = $(patsubst %/models/math, %, $(MATH_DIR))
$(info MKFILE_PATH = $(MKFILE_PATH))
$(info MATH_PATH = $(MATH_DIR))
$(info SIRIUS_HOME = $(SIRIUS_HOME))
###### CXX flags #####
CXX = g++
CXXFLAGS = -Wall -g -lgsl -lgslcblas -lm -larmadillo --std=c++11 -lstdc++
CXXFLAGS += -I$(SIRIUS_HOME)/models/math/include\
		  -I$(SIRIUS_HOME)/models/cad/include
###### C flags #####
CC = gcc
CFLAGS = -Wall -g -lm -std=c11
CFLAGS += -I$(SIRIUS_HOME)/models/math/include
##### CPP Source #####
MATH_CPP_SOURCES += $(SIRIUS_HOME)/models/math/src/matrix/utility.cpp
MATH_TEST_CPP_SOURCES += $(MATH_DIR)/unit_test/mathunit.cpp
##### C Source #####
MATH_C_SOURCE = $(SIRIUS_HOME)/models/math/src/math_utility_c.c
MATH_C_SOURCE += $(SIRIUS_HOME)/models/cad/src/global_constants.c
##### OBJECTS #####
MATH_OBJECTS += $(patsubst %.cpp, %.o, $(MATH_TEST_CPP_SOURCES))
MATH_OBJECTS += $(patsubst %.cpp, %.o, $(MATH_CPP_SOURCES))
MATH_C_OBJECTS = $(patsubst %.c, %.o, $(MATH_C_SOURCE))
all: mathtest

deps := $(MATH_OBJECTS:%.o=%.o.d) $(MATH_C_OBJECTS:%.o=%.o.d)

%.o: %.cpp
	$(CXX) -c $< -o $@ $(CXXFLAGS)

%.o: %.c
	$(CC) -c $< -o $@ $(CFLAGS)

mathtest: $(MATH_OBJECTS) $(MATH_C_OBJECTS)
	$(CXX) $(MATH_OBJECTS) $(MATH_C_OBJECTS) -o $@ $(CXXFLAGS)

run: all
	./mathtest
.PHONY : clean
clean:
	rm -f  *.o mathtest
	find $(MATH_DIR)/src -name *.o -type f -delete
	find $(MATH_DIR)/src/matrix -name *.o -type f -delete
	find $(SIRIUS_HOME)/models/cad/src -name *.o -type f -delete
	find ../../ -name *.d -type f -delete
	



